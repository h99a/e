Addition
MOV AX,1111H
MOV BX,2222H
ADD AX,BX
MOV [2000],AX
HLT


﻿

Subtraction
MOV AX,2222H
MOV BX,1111H
SUB AX,BX
MOV [3000],AX
HLT


﻿

Multiplication
MOV AX,3H
MOV BX,2H
MUL BX
MOV [4000],AX
HLT



﻿

Division
MOV AX,0006
MOV BX,0003
DIV BX
MOV [2000],AX
HLT




﻿
16 bit additiom with carry
MOV CX, 0000H
MOV AX,[1200]
MOV BX, [1202]
ADD AX.BX
JNC L1
INC CX
L1: MOV [1206],CX
MOV [1204], AX
HLT


16 bit additiom with borrrow
﻿MOV AX,[1000h] MOV BX,[1002h]
MOV CL,00h
SUB AX,BX
JNC jump
INC CL
NOT AX
ADD AX,0001h
jump:
﻿MOV [1004h],AX
MOV [1006h],CL
HLT


16 bit multiplication
﻿MOV AX,[1200]
MOV BX, [1202]
MUL BX
MOV [1206],AX
MOV AX,DX
MOV [1208],AX
HLT



16 bit division
﻿MOV AX,[1200]
MOV DX, [1202]
MOV BX, [1204]
DIV BX
MOV [1206].AX
MOV AX,DX
MOV [1208],AX
HLT


average of three numbers
﻿MOV SI, 500
MOV DI, 600
MOV AX, 0000
MOV CL, [SI]
MOV BL, CL
INC SI
ADD AL, [SI]
ADC AH, 00
INC SI
DEC CL
JNZ 40E
DIV BL
MOV [DI], AX
HLT


sum of array of numbers
﻿MOV CX, 06h
MOV AX,0000H
MOV BX,0000H
MOV SI,1000H
Repeat:
MOV BL, [SI]
ADD AX.BX
INC SI
DEC CX
JNZ Repeat
MOV DI, 1011H
MOV [DI], AX
HLT



BCD to HEX convertion
﻿MOV SI,1000
MOV DI,2000
MOV BL,[SI]
AND BL,OF
MOV AL,[SI]
AND AL,FO
MOV CL,04
ROR AL,CL
MOV DL,0A
MUL DL
ADD AL,BL
MOV [DI],AL HLT


HEX to BCD convertion
﻿MOV BL,[2000]
MOV AL,00
L1:ADD AL,01
DAA DEC BL
JNZ L1
MOV [2001], AL
HLT


BCD to ASCII convertion
﻿MOV AL, [2000]
MOV AH, AL
AND AL, OF
MOV CL, 04
SHR AH, CL
OR AX, 3030
MOV [3000], AX
HLT

binarty to gray convertoin 
﻿MOV AL,[1200H]
MOV BL,AL
CLC
MOV CL,01
RCR AL,CL
XOR BL,AL
MOV [1204H],BL
HLT


8051
8 bit addition 
﻿MOV A, #05H
MOV R1, #09H
ADD A, R1
MOV 50H, A
AGAIN: SJMP AGAIN

8 bit addition 
﻿MOV RO,#20H
MOV R1,#30H
MOV A,@R0;
MOV R5,A; 
MOV R4,#00H
INC RO; 
MOV A,@R0;
ADD A,R5;
JNC SAVE
INC R4; 
MOV B,R4;
MOV @R1,B;
INC R1; 
SAVE: MOVE
HALT SJMP


16bit addition
﻿MOV A,#73H
MOV R0,#93H
ADD A,R0
MOV 41H,A
MOV A,#11H
MOV R0#24H
ADDC A,R0
JNC SKIP
MOV 39H.#01H
SKIP: MOV 40H,A
STOP: SJMP STOP

8 bit subtraction
﻿MOV R0,#20H
MOV R1,#30H
MOVA,@R0
MOV R5,A
MOV R4,#00H
INC R0
MOVA,@R0
MOV R3,A
MOVA,R5
CLR C
SUBB A,R3
JNC SAVE
INC R4
MOV B,R4
MOV @R1,B
INC R1
SAVE: MOV @R1,z
HALT: SJMP HALT

16 bit subtraction
﻿MOV R1,#56H
MOV R2,#78H
MOV R3,#12H
MOV R4,#34H
CLR C
MOV A,R1
SUBB A,R3
MOV 41H,A
MOV A,R2
SUBB A,R4
MOV 40H,A
STOP: SJMP STOP

16 bit subtraction (ulta)
﻿MOV R1,#12H
MOV R2,#34H
MOV R3,#56H
MOV R4,#78H
CLR C
MOV A,R1
SUBB A,R3
MOV 41H,A
MOV A,R2
SUBB A,R4
JNC SKIP1
MOV 39H,# 01H
SKIP1: CPLA
﻿MOV 40H,A
MOV A,41H
CPL A
ADD A,#01H
JNC SKIP2
MOV A,40H
ADD A,01H
MOV 40H,A
SKIP2: MOV 41H,A
STOP: SJMP STOP

8 bit mul
﻿MOV RO, #20H
MOV R1, #30H
MOV A, @RO
INC RO
MOV B,@RO
MUL AB
MOV @R1, B
INC R1
MOV @R1, A
HALT:SJMP HALT

 8 bit division
﻿MOV RO, #20H
MOV R1, # 30H
MOV A, @RO INC RO
MOV B,@RO
DIV AB
MOV @R1, A
INC R1
MOV @R1, B
HALT:SJMP HALT

16 bit multiplication
﻿MOV A, 50H
MOV B,52H
MUL AB
MOV 60H,A
MOV 61H,B
MOV A,51H
MOV B,53H
MUL AB
MOV 62H,A
MOV 63H,B
MOV A,51H
MOV B,52H
MUL AB
ADD A,61H
﻿MOV 61H,A
MOV A,B
ADDC A,62H
MOV 62H,A
MOV A,63H
ADDC A,#00H
MOV 63H,A
MOV A,50H
MOV B,53H
MUL AB
ADD A,61H
MOV 61H,A
MOV A,B
ADDC A,62H
﻿MOV 62H,A
MOV A,63H
ADDC A,#00H
MOV 63H,A
STOP:SJMP STOP


sorting an array in ascending order
﻿MOV CH,04H 
L1:MOV CL,04H
MOV SI,2000
L2:MOV AL, [SI]
MOV BL, [SI+1]
CMP AL, BL 
JC L3
MOV DL, [SI+1]
XCHG [SI], DL
MOV [SI+1], DL
L3:INC SI
DEC CL
JNZ L2
DEC CH
JNZ L1
HLT

sorting an array in decending order
﻿MOV CH,04H 
L1:MOV CL,04H
MOV SI,2000
L2:MOV AL, [SI]
MOV BL, [SI+1]
CMP AL, BL 
JNC L3
MOV DL, [SI+1]
XCHG [SI], DL
MOV [SI+1], DL
L3:INC SI
DEC CL
JNZ L2
DEC CH
JNZ L1
HLT


Factorial of the given number
﻿MOV CX, 04H
MOV AX, 0001
MOV BX, AX
L1:INC BX
MUL BX
CMP BX, CX
JNZ L1
MOV [2000], AX
HLT


ascending order
﻿MOV R4,30H
MOV R0,#50H
L1:MOV B,R4
MOV R2,B
MOV A,R0
INC A
MOV R1,A
L2:MOV 10H,@R0
MOV A,@R1
CJNE A,10H,L3
SJMP NEXT
L3:JC EXCHANGE
SJMP NEXT
﻿EXCHANGE:MOV@R0,A
MOV @R1,10H
NEXT:INC R1
DJNZ R2,L2
INC RO
DJNZ R4, L1
HERE:SJMP HERE

decending order
﻿MOV R4,30H
MOV R0,#50H
L1:MOV B,R4
MOV R2,B
MOV A,R0
INC A
MOV R1,A
L2:MOV 10H,@R0
MOV A,@R1
CJNE A,10H,L3
SJMP NEXT
L3:JNC EXCHANGE
SJMP NEXT
﻿EXCHANGE:MOV@R0,A
MOV @R1,10H
NEXT:INC R1
DJNZ R2,L2
INC R0
DJNZ R4,L1
HERE:SJMP HERE


largest number
﻿MOV R5,30H
MOV R0,#40H
MOV A,@R0
DEC R5
L3:INC R0
MOV 50H,@R0
CJNE A,50H,L1
SJMP L2
L1:JNC L2
MOV A,@R0
L2:DJNZ R5,L3
MOV 50H,A
STOP:SJMP STOP


smallest number
﻿MOV R5,30
MOV RO,#40H
MOV A,@RO
DEC R5
L3:INC RO
MOV 50H,@RO
CJNE A,50H,L1
SJMP L2
L1:JC L2
MOV A,@RO
L2:DJNZ R5,L3
MOV 50H,A
STOP:SJMP STOP


odd or even 
﻿CLR C MOV A,30H
RRC A
JNC L1
MOV 31H,#FFH
SJMP L2
L1:MOV 31H,#00H
L2:NOP
STOP:SJMP STOP


positive or negative
﻿CLR C MOV A,30H
RLC A
JNC L1
MOV 31H,#FFH
SJMP L2
L1:MOV 31H,#00H
L2:NOP
STOP:SJMP STOP


exchange internal
﻿MOV R3,#05H
MOV R0,#20H
MOV R1,#30H
L1: MOV A,@R0
XCHA,@R1
MOV @R0,A
INC RO
INC R1
DJNZ R3,L1
STOP:SJMP STOP


exchange external
﻿MOV DPTR,#6000H
MOVX A,@DPTR
MOV RO,#50H
MOV @RO,A
INC DPL
MOVX A,@DPTR
XCH A,@RO
MOVX @DPTR,A
DEC DPL
MOV A,@RO
MOVX @DPTR,A
STOP:SJMP STOP


boolean operations AND,NAND,OR,NOR,XOR,XNOR
﻿MOV A,50H
ANL A,51H ORL 
MOV 52H,A
CPL A
MOV 53H,A
STOP:SJMP STOP


square wave of 50khz on pin2.3
﻿(a) T = 1/50=20 ms, the period of square wave.
(b) 1/2 of it for the high and low portion of the pulse is 10 ms.
(c) 10 ms/1.085 us = 9216 and 65536-9216=56320 in decimal, and in hex it is DC00H. (d) TL = 00 and TH = DC (hex).
﻿MOV TMOD, #10H
AGAIN: MOV TL1,#00
MOV TH1,#0DCH
SETB TR1
BACK: JNB TF1,BACK
CLR TR1
CLR TF1
CPL P2.3
SJMP AGAIN

serial window
ORG 0000H
SJMP MAIN
ORG 0030H
MAIN:MOV SCON,#50H
MOV TMOD,#20H
MOV TH1,#-3
SETB TR1
BACK: JNB RI,BACK
MOV A,SBUF
MOV SBUF,A
CLR RI
SJMP BACK
END

Interupt
﻿ORG 0000H
LJMP MAIN
ORG 0003H
MOV P2,#00H
RETI
MAIN: MOV IE,#81H
LOOP: ADD A,#01H
MOV P2,#0FFH
SJMP LOOP
END

